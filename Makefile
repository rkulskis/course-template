SHELL=/bin/bash
DIR = pa/template-python
PA-DIRS := $(filter-out problems,$(wildcard pa/*/))
REQUIREMENTS = timeout-decorator gradescope-utils numpy tree_sitter_languages tree-sitter==0.21.3 pipx
all: demo
publish:
demo:
	$(MAKE) -C $(DIR)				# generates assignment files and starter_code lib
	$(MAKE) -C $(DIR)/starter_code # run all starter tests on submission.py
	$(MAKE) -C $(DIR)/autograder # run all autograder tests on submission.py
	$(MAKE) zip -C $(DIR)				# get autograder.zip and starter_code.zip
enter-docker:
	sudo docker run \
	-v `pwd | xargs realpath`:/course-template \
	-it rkulskis/course-template-toolchain:latest \
	/bin/bash -c "cd /course-template; /bin/bash"
_build-docker:									# don't need to run, rather do enter-docker and image is pulled from remote dockerhub
	docker buildx build \
  --platform linux/amd64,linux/arm64 \
  -t rkulskis/course-template-toolchain:latest \
  --push .

install:														# only need to run once
  # can change to pipx, but cannot find tree-sitter for some reason	
	echo $(REQUIREMENTS) | xargs -n 1 pip install
clean:
	@cat .gitignore | while read -r pattern; \
	do find . -name "$$pattern" -exec rm -rf {} +; done
	@cat .gitignore | while read -r pattern; \
	do find . \( -type f -o -type l \) -wholename "$$pattern" -exec rm {} +; done
	@cat .gitignore | while read -r pattern; \
	do find . -type d -wholename "$$pattern" -exec rm -rf {} +; done
	@for dir in $(PA-DIRS); do \
		if [ -d "$$dir" ]; then \
			$(MAKE) -C "$$dir" clean; \
		fi \
	done

readme:
	sed '/### Tree (source files only)/q' README.md > tmp.md
	mv tmp.md README.md
	make clean
	echo "\`\`\`bash" >> README.md
	echo "$$(tree pa/problems)" >> README.md
	echo "" >> README.md
	echo "$$(tree pa/template-python)" >> README.md	
	echo "\`\`\`" >> README.md
	echo "" >> README.md
	make
	echo "### Tree (with autogenerated files)" >> README.md
	echo "\`\`\`bash" >> README.md
	echo "$$(tree pa/problems)" >> README.md
	echo "" >> README.md
	echo "$$(tree pa/template-python)" >> README.md	
	echo "\`\`\`" >> README.md
